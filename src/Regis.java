
import SecuGen.FDxSDKPro.jni.JSGFPLib;
import SecuGen.FDxSDKPro.jni.SGDeviceInfoParam;
import SecuGen.FDxSDKPro.jni.SGFDxErrorCode;
import SecuGen.FDxSDKPro.jni.SGFDxSecurityLevel;
import SecuGen.FDxSDKPro.jni.SGFingerInfo;
import SecuGen.FDxSDKPro.jni.SGFingerPosition;
import SecuGen.FDxSDKPro.jni.SGImpressionType;
import java.awt.FlowLayout;
import java.sql.Connection;
import static java.sql.Types.NULL;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author insan
 */
public class Regis extends javax.swing.JFrame {

    /**
     * Creates new form regis
     */
    public Regis() {
        initComponents();
//        myinitComponents();
    }
//    public Regis(db db,ArrayList<Siswa> siswa,ArrayList<Penjemput> penjemput, ArrayList<Admin> admin,ArrayList<Biometric> biometric){

    public Regis(db db) {
        setUndecorated(true);
        setResizable(true);
        setLayout(new FlowLayout(FlowLayout.CENTER));
        setExtendedState(getExtendedState() | JFrame.MAXIMIZED_BOTH);
        initComponents();
        myinitComponents(db);
    }

    private void myinitComponents(db db1) {

        letakkanjari.setVisible(false);
        scaning.setVisible(false);
        scanupdate.setVisible(false);
        ButtonGroup group = new ButtonGroup();
        combo.addItem("Siswa");
        combo.addItem("Admin");
        combo.addItem("Ortu");
        combo.addItem("Guru");

        db = db1;

        siswa = db.getSiswa();
        if (!siswa.isEmpty()) {
            penjemput = db.getPenjemput();
            biometric = db.getBiometric();
            admin = db.getAdmin();
            guru = db.getGuru();
        }

        for (Siswa s : siswa) {
            System.out.println(s.nama + "||");
        }
        System.out.println(penjemput);
        System.out.println(biometric);
        System.out.println(admin);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cari = new javax.swing.JLabel();
        scaning = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        inputids = new javax.swing.JTextField();
        combo = new javax.swing.JComboBox<>();
        nama = new javax.swing.JTextField();
        letakkanjari = new javax.swing.JLabel();
        scanupdate = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        cari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/regis cari.png"))); // NOI18N
        cari.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cariMouseClicked(evt);
            }
        });
        getContentPane().add(cari);
        cari.setBounds(150, 370, 200, 70);

        scaning.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/regis scan.png"))); // NOI18N
        scaning.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scaningMouseClicked(evt);
            }
        });
        getContentPane().add(scaning);
        scaning.setBounds(550, 300, 200, 60);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/hadir utama.png"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel4);
        jLabel4.setBounds(760, 520, 200, 60);

        inputids.setFont(new java.awt.Font("Robaga Rounded Black", 1, 18)); // NOI18N
        getContentPane().add(inputids);
        inputids.setBounds(110, 230, 310, 40);

        combo.setFont(new java.awt.Font("Robaga Rounded Black", 1, 18)); // NOI18N
        combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboActionPerformed(evt);
            }
        });
        getContentPane().add(combo);
        combo.setBounds(110, 330, 310, 40);

        nama.setEditable(false);
        nama.setFont(new java.awt.Font("Robaga Rounded Black", 1, 18)); // NOI18N
        nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaActionPerformed(evt);
            }
        });
        getContentPane().add(nama);
        nama.setBounds(500, 230, 320, 40);

        letakkanjari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/tulisanscan.png"))); // NOI18N
        getContentPane().add(letakkanjari);
        letakkanjari.setBounds(170, 20, 680, 100);

        scanupdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/regis scan.png"))); // NOI18N
        scanupdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scanupdateMouseClicked(evt);
            }
        });
        getContentPane().add(scanupdate);
        scanupdate.setBounds(550, 300, 200, 60);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/cari id.png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(170, 20, 670, 90);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/refresh4.png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel6);
        jLabel6.setBounds(30, 520, 70, 60);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/regis br.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1020, 600);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        Main r = new Main(db);
        r.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel4MouseClicked

    private void namaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaActionPerformed

    private void cariMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cariMouseClicked
        // TODO add your handling code here:

        String a = inputids.getText();
        System.out.println(a);

        String comboitem = (String) combo.getSelectedItem();
        if (comboitem == "Siswa") {
            for (Siswa s : siswa) {
//                System.out.print(s.getIds() + " || ");
//                System.out.println(inputIds.getText());
                if (s.getIds() == Integer.parseInt(inputids.getText())) {
                    nama.setText(s.nama);
                    table = "siswa";
                    uid = "ids";
                    if (s.getIdf() == NULL) {
                        letakkanjari.setVisible(true);
                        scaning.setVisible(true);
                        return;
                    } else {
                        checkUpdate(s.getIdf());
                        return;
                    }

                }
            }

        } else if (comboitem == "Ortu") {
            for (Penjemput s : penjemput) {
//                System.out.print(s.getIdp() + " || ");
//                System.out.println(inputIds.getText());
                if (s.getIdp() == Integer.parseInt(inputids.getText())) {
                    nama.setText(s.nama);
                    table = "penjemput";
                    uid = "idp";
                    if (s.getIdf() == NULL) {
                        letakkanjari.setVisible(true);
                        scaning.setVisible(true);
                        return;
                    } else {
                        checkUpdate(s.getIdf());
                        return;
                    }
                }
            }
        } else if (comboitem == "Admin") {
            for (Admin s : admin) {
//                System.out.print(s.getIda() + " || ");
//                System.out.println(inputIds.getText());
                if (s.getIda() == Integer.parseInt(inputids.getText())) {
                    nama.setText(s.nama);
                    table = "admin";
                    uid = "ida";
                    if (s.getIdf() == NULL) {
                        letakkanjari.setVisible(true);
                        scaning.setVisible(true);
                        return;
                    } else {
                        checkUpdate(s.getIdf());
                        return;
                    }
                }
            }
        }  else if (comboitem == "Guru") {
            for (Guru s : guru) {
//                System.out.print(s.getIda() + " || ");
//                System.out.println(inputIds.getText());
                if (s.getIdg()== Integer.parseInt(inputids.getText())) {
                    nama.setText(s.nama);
                    table = "guru";
                    uid = "idg";
                    if (s.getIdf() == NULL) {
                        letakkanjari.setVisible(true);
                        scaning.setVisible(true);
                        return;
                    } else {
                        checkUpdate(s.getIdf());
                        return;
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Pilih user terlebih dahulu!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
        JOptionPane.showMessageDialog(null, "User TIdak Ditemukan", "Peringatan", JOptionPane.WARNING_MESSAGE);
        inputids.setText("");
        nama.setText("");

    }//GEN-LAST:event_cariMouseClicked

    public boolean checkUpdate(int idf) {
        int aa = JOptionPane.showConfirmDialog(null, "sidik jari telah terdaftar, ubah sidik jari?", "Peringatan", JOptionPane.YES_NO_OPTION);
        if (aa == 0) {
            try {
            idfUpdate = idf;
            System.out.println("idfnya boz : " + idf);
            letakkanjari.setVisible(true);
            byte[] ttt = new byte[400];
            
                System.out.println("coba update" +idfUpdate);
                db.updateTemplate(db.con, ttt, idfUpdate);
                biometric = db.getBiometric();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Regis.class.getName()).log(Level.SEVERE, null, ex);
            }
            scanupdate.setVisible(true);
//            Scan.setVisible(true);
            return true;
        }
        return true;
    }


    private void scaningMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scaningMouseClicked
        // TODO add your handling code here:
        try {

            // TODO add your handling code here:
            Scanning scan = new Scanning();

            tmp1 = getTemplate(scan.sgfplib, scan.deviceInfo);
            for (Biometric bio : biometric) {
                tmp2 = bio.getTmp();
                long err = scan.sgfplib.MatchTemplate(tmp1, tmp2, SGFDxSecurityLevel.SL_NORMAL, matched);
                if (matched[0]) {
                    JOptionPane.showMessageDialog(null, " Sidik jari telah terdaftar", "Peringatan", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            }

            JOptionPane.showMessageDialog(null, "Tempelkan Jari yang sama", "Informasi", JOptionPane.WARNING_MESSAGE);
            tmp2 = getTemplate(scan.sgfplib, scan.deviceInfo);

            long err = scan.sgfplib.MatchTemplate(tmp2, tmp1, SGFDxSecurityLevel.SL_NORMAL, matched);
            if (matched[0]) {
                db.insertTemplate(db.con, tmp1);
                int idf = db.getlastIdf();
                System.out.println(db.updateIdf(db.con, table, uid, idf, Integer.parseInt(inputids.getText())));

                letakkanjari.setVisible(false);
                scaning.setVisible(false);
//            myinitComponents();
                JOptionPane.showMessageDialog(null, "Registrasi Berhasil", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            JOptionPane.showMessageDialog(null, "Sidik jari tidak cocok", "Peringatan", JOptionPane.INFORMATION_MESSAGE);

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Error : " + ex.getMessage(), "Communication Error", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_scaningMouseClicked

    private void scanupdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scanupdateMouseClicked
        // TODO add your handling code here:

        try {

            // TODO add your handling code here:
            Scanning scan = new Scanning();

            tmp1 = getTemplate(scan.sgfplib, scan.deviceInfo);
            for (Biometric bio : biometric) {
                tmp2 = bio.getTmp();
                long err = scan.sgfplib.MatchTemplate(tmp1, tmp2, SGFDxSecurityLevel.SL_NORMAL, matched);
                if (matched[0]) {
                    JOptionPane.showMessageDialog(null, " Sidik jari telah terdaftar", "Peringatan", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            }

            JOptionPane.showMessageDialog(null, "Tempelkan Jari yang sama", "Informasi", JOptionPane.WARNING_MESSAGE);
            tmp2 = getTemplate(scan.sgfplib, scan.deviceInfo);
            long err = scan.sgfplib.MatchTemplate(tmp2, tmp1, SGFDxSecurityLevel.SL_NORMAL, matched);
            if (matched[0]) {
                db.updateTemplate(db.con, tmp1, idfUpdate);

                letakkanjari.setVisible(false);
                scanupdate.setVisible(false);
//            myinitComponents();
                JOptionPane.showMessageDialog(null, "Update Berhasil", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            JOptionPane.showMessageDialog(null, "Sidik jari tidak cocok", "Peringatan", JOptionPane.INFORMATION_MESSAGE);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Error : " + ex.getMessage(), "Communication Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_scanupdateMouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        db = new db();
        siswa = db.getSiswa();
        if (!siswa.isEmpty()) {
            penjemput = db.getPenjemput();
            biometric = db.getBiometric();
            admin = db.getAdmin();

        }
        ImageIcon icon = new ImageIcon("src/image/menu2kecil.png");
        JOptionPane.showMessageDialog(null, "Data telah di Refresh",
                "Informasi", JOptionPane.INFORMATION_MESSAGE, icon);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboActionPerformed

    public static byte[] getTemplate(JSGFPLib sgfplib, SGDeviceInfoParam deviceInfo) {
        int[] quality = new int[1];
        byte[] regMin = new byte[400];
        byte[] imageBuffer = new byte[deviceInfo.imageHeight * deviceInfo.imageWidth];
        long err;
        SGFingerInfo fingerInfo = new SGFingerInfo();
        fingerInfo.FingerNumber = SGFingerPosition.SG_FINGPOS_LI;
        fingerInfo.ImpressionType = SGImpressionType.SG_IMPTYPE_LP;
        fingerInfo.ViewNumber = 1;
        if (sgfplib.GetImageEx(imageBuffer, 5000, 0, 80) == SGFDxErrorCode.SGFDX_ERROR_NONE) {
            err = sgfplib.GetImageQuality(deviceInfo.imageWidth, deviceInfo.imageHeight, imageBuffer, quality);
            err = sgfplib.CreateTemplate(fingerInfo, imageBuffer, regMin);
            System.out.println("eror template : " + err);
        }

        return regMin;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Regis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Regis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Regis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Regis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Regis().setVisible(true);
            }
        });
    }

//    
    db db;
//    Connection con = db.getkoneksi();
    ArrayList<Siswa> siswa = new ArrayList<>();
    ArrayList<Admin> admin = new ArrayList<>();
    ArrayList<Penjemput> penjemput = new ArrayList<>();
    ArrayList<Guru> guru = new ArrayList<>();
    ArrayList<Biometric> biometric = new ArrayList<>();
    String table = "";
    String uid = "";
    byte[] tmp1 = new byte[400];
    byte[] tmp2 = new byte[400];
    boolean[] matched = new boolean[1];
    int idfUpdate = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cari;
    private javax.swing.JComboBox<String> combo;
    private javax.swing.JTextField inputids;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel letakkanjari;
    private javax.swing.JTextField nama;
    private javax.swing.JLabel scaning;
    private javax.swing.JLabel scanupdate;
    // End of variables declaration//GEN-END:variables
}
